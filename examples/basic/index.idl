[meta
  title:"idyll-loader-component"
  description:"A loader for idyll so your scripts don't block" /]

[Header
  title:"idyll-loader"
  author:"Ricky Reusser"
  authorLink:"https://twitter.com/rickyreusser" /]

This is a plot of [Equation]y = x[/Equation]:

[Lineplot style:`{height: '300px'}` loadOnVisible:`true`/]

You do this by creating [link href:"https://github.com/rreusser/idyll-loader-component/blob/master/examples/basic/components/lineplot.js" text:"a custom component"/] that render this plot:

```
class Lineplot extends PlotlyComponent {
  plot (gd) {
    Plotly.plot(gd, {
      data: [{
        y: [1, 2, 3]
      }],
      layout: {
        margin: {t: 40, r: 30, b: 30, l: 30}
      }
    });
  }
}
```

The plotly compoent just uses the loader, which is also very simple to use:

```
render () {
  return <Loader src="..." onLoad={this.onLoad}>
    I'm content added after the script loads!
  </Loader>
}
```

And for some reason it's the same plot again, but hey at least it only loads the plotly cdn script once and the end-user doesn't have to worry about including the script at all:

[Lineplot style:`{height: '300px'}` loadOnVisible:`true`/]

And of course it wouldn't be complete without good old json loading:

[Plotly src:"data/99.json" style:`{height:'500px'}` loadOnVisible:`true`/]
